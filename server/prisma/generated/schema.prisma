//? ===================================== ACCOUNTS SCHEMA ===================================== ?//

model accounts {
  id             String                 @id @default(cuid())
  access         access                 @default(User)
  username       String                 @unique
  email          String                 @unique
  firstName      String
  lastName       String
  middleName     String?
  gender         gender
  client_profile client_profile         @default(Other)
  cellphone_no   String?
  telephone_no   String?
  occupation     String?
  position       String?
  address        String?
  picture        String?
  commodity      accounts_commodities[]
  password       String
  createdAt      DateTime               @default(now())
  updatedAt      DateTime               @updatedAt

  // Relations
  seminars seminar_participants[]
}

model commodities {
  id          String                 @id @default(cuid())
  name        String                 @unique
  icon        String?
  description String?
  accounts    accounts_commodities[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//? ====================================== RELATIONSHIPS ====================================== ?//

model accounts_commodities {
  id           String   @id @default(cuid())
  account_id   String
  commodity_id String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  commodity commodities @relation(fields: [commodity_id], references: [id])
  account   accounts    @relation(fields: [account_id], references: [id])

  @@unique([account_id, commodity_id])
}

//? ========================================== ENUMS ========================================== ?//

enum client_profile {
  Fishfolk                          @map("Fishfolk")
  Rural_Based_Org                   @map("Rural Based Org")
  Student                           @map("Student")
  Agricultural_Fisheries_Technician @map("Agricultural/Fisheries Technician")
  Youth                             @map("Youth")
  Women                             @map("Women")
  Govt_Employee                     @map("Govt Employee")
  PWD                               @map("PWD")
  Indigenous_People                 @map("Indigenous People")
  Other                             @map("Other")
}

enum access {
  Admin
  User
  Super_Admin @map("Super Admin")
}

enum gender {
  Male
  Female
  Other
}

//? ======================================= ITEM SCHEMA ======================================= ?//

model inventory_items {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  categoryId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  item_stacks item_stacks[]
  category    inventory_categories @relation(fields: [categoryId], references: [id])
}

//? ===================================== CATEGORY SCHEMA ===================================== ?//

model inventory_categories {
  id          String   @id @default(cuid())
  name        String   @unique
  icon        String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  items inventory_items[]
}

//? ====================================== STACKS SCHEMA ====================================== ?//
model item_stacks {
  id     Int @id @default(autoincrement())
  itemId Int

  // TODO: ===================== An item should have atleast one of these =====================
  quantity Int?
  weight   Float?

  status    item_status @default(Available)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  // Relations
  item inventory_items @relation(fields: [itemId], references: [id])
}

//? ========================================== ENUMS ========================================== ?//

enum item_status {
  Available
  Unavailable
  Lost
  Damaged
  Reserved
  Borrowed
  Distributed
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//? ===================================== SEMINARS SCHEMA ===================================== ?//

model seminars {
  id                    String         @id @default(cuid())
  title                 String
  description           String         @db.Text
  location              String
  speaker               String
  start_date            DateTime
  end_date              DateTime
  start_time            DateTime
  end_time              DateTime
  capacity              Int
  registration_deadline DateTime
  status                seminar_status @default(Upcoming)
  photo                 String?
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @updatedAt

  // Relations
  participants seminar_participants[]
}

model seminar_participants {
  id         String             @id @default(cuid())
  seminar_id String
  account_id String
  status     participant_status @default(Registered)
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt

  // Relations
  seminar seminars @relation(fields: [seminar_id], references: [id])
  account accounts @relation(fields: [account_id], references: [id])

  @@unique([seminar_id, account_id])
}

//? ========================================== ENUMS ========================================== ?//

enum seminar_status {
  Upcoming
  Ongoing
  Completed
  Cancelled
}

enum participant_status {
  Attended
  Not_Attended @map("Not Attended")
  Registered
  Cancelled
}
